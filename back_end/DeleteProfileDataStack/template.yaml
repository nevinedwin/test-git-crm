AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "Delete Customer/Realtor Profile Data"

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 900
    Layers:
      - !Ref AwsSdkLayer
    Environment:
      Variables:
        entitiesTableName: !Sub ${StackNamePrefix}entities-${StageName}-db
        entitiesTableByEntityAndId: !Sub ${StackNamePrefix}byEntityAndIdIndex-${StageName}-db
        entitiesTableByDataAndEntity: !Sub ${StackNamePrefix}byDataAndEntityIndex-${StageName}-db
        STACK_PREFIX: !Ref StackNamePrefix
        ES_ENDPOINT: !Ref ElasticsearchDomainEndpoint
        ES_REGION: !Ref AWS::Region
        FILE_MANAGER_BUCKET_NAME: !Sub ${StackNamePrefix}frontend-${StageName}-s3
        DELETE_PROFILE_DATA_STATEMACHINE_ARN: !Sub arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${StackNamePrefix}DeleteProfileDataStateMachine-${StageName}
    Tags:
      Environment: !Ref StageName
      Application: !Ref ApplicationTag
      Owner: !Ref OwnerTag
      Purpose: !Ref PurposeTag
      Service: lambda

Parameters:
  StageName:
    Type: String
  StackNamePrefix:
    Type: String
  AwsSdkLayer:
    Type: String
  HyphenLambdaManagedPolicy:
    Type: String
  ElasticsearchDomainEndpoint:
    Type: String
  ElasticsearchDomain:
    Type: String
  FileManagerBucketARN:
    Type: String
  ApplicationTag:
    Type: String
  OwnerTag:
    Type: String
  PurposeTag:
    Type: String
  NestedStackPrefix:
    Type: String
    Default: "deleteProfileData-" 

Resources:
  InitLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref HyphenLambdaManagedPolicy
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InitLambdaRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub ${FileManagerBucketARN}/delete_profile_data/*
              - Effect: Allow
                Action:
                  - es:ESHttpPost
                  - es:ESHttpPut
                Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomain}/*
      Tags:
        - Key: Environment
          Value: !Ref StageName
        - Key: Application
          Value: !Ref ApplicationTag
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Purpose
          Value: !Ref PurposeTag
        - Key: Service
          Value: iam

  InitLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${StackNamePrefix}${NestedStackPrefix}InitLambda-${StageName}
      Handler: initLambda.main
      CodeUri: initLambda
      Role: !GetAtt InitLambdaRole.Arn

  InitLambdaGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${InitLambda}
      RetentionInDays: 90
      Tags:
        - Key: Environment
          Value: !Ref StageName
        - Key: Application
          Value: !Ref ApplicationTag
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Purpose
          Value: !Ref PurposeTag
        - Key: Service
          Value: cloudwatch

  InitRemoveFieldLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref HyphenLambdaManagedPolicy
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InitRemoveFieldLambdaRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub ${FileManagerBucketARN}/delete_profile_data/*
              - Effect: Allow
                Action:
                  - es:ESHttpPost
                  - es:ESHttpPut
                Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomain}/*
      Tags:
        - Key: Environment
          Value: !Ref StageName
        - Key: Application
          Value: !Ref ApplicationTag
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Purpose
          Value: !Ref PurposeTag
        - Key: Service
          Value: iam

  InitRemoveFieldLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${StackNamePrefix}${NestedStackPrefix}InitRemoveFieldLambda-${StageName}
      Handler: initRemoveField.main
      CodeUri: initRemoveField
      Role: !GetAtt InitRemoveFieldLambdaRole.Arn

  InitRemoveFieldLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${InitRemoveFieldLambda}
      RetentionInDays: 90
      Tags:
        - Key: Environment
          Value: !Ref StageName
        - Key: Application
          Value: !Ref ApplicationTag
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Purpose
          Value: !Ref PurposeTag
        - Key: Service
          Value: cloudwatch

  IteratorLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref HyphenLambdaManagedPolicy
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: IteratorLambdaRolePolicy
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource: "*"
      Tags:
        - Key: Environment
          Value: !Ref StageName
        - Key: Application
          Value: !Ref ApplicationTag
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Purpose
          Value: !Ref PurposeTag
        - Key: Service
          Value: iam

  IteratorLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${StackNamePrefix}${NestedStackPrefix}IteratorLambda-${StageName}
      Handler: iterator.main
      CodeUri: iterator
      Role: !GetAtt IteratorLambdaRole.Arn

  IteratorLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${IteratorLambda}
      RetentionInDays: 90
      Tags:
        - Key: Environment
          Value: !Ref StageName
        - Key: Application
          Value: !Ref ApplicationTag
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Purpose
          Value: !Ref PurposeTag
        - Key: Service
          Value: cloudwatch
  
  RemoveFieldLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref HyphenLambdaManagedPolicy
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: RemoveFieldLambdaRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub ${FileManagerBucketARN}/delete_profile_data/*
              - Effect: Allow
                Action:
                  - es:ESHttpPost
                  - es:ESHttpPut
                Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomain}/*
      Tags:
        - Key: Environment
          Value: !Ref StageName
        - Key: Application
          Value: !Ref ApplicationTag
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Purpose
          Value: !Ref PurposeTag
        - Key: Service
          Value: iam

  RemoveFieldLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${StackNamePrefix}${NestedStackPrefix}RemoveFieldLambda-${StageName}
      Handler: removeField.main
      CodeUri: removeField
      Role: !GetAtt RemoveFieldLambdaRole.Arn

  RemoveFieldLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${RemoveFieldLambda}
      RetentionInDays: 90
      Tags:
        - Key: Environment
          Value: !Ref StageName
        - Key: Application
          Value: !Ref ApplicationTag
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Purpose
          Value: !Ref PurposeTag
        - Key: Service
          Value: cloudwatch

  DeleteProfileDataStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: DeleteProfileDataStateMachineExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt InitLambda.Arn
                  - !GetAtt InitRemoveFieldLambda.Arn
                  - !GetAtt IteratorLambda.Arn
                  - !GetAtt RemoveFieldLambda.Arn
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !Sub ${InitLambda.Arn}:*
                  - !Sub ${InitRemoveFieldLambda.Arn}:*
                  - !Sub ${IteratorLambda.Arn}:*
                  - !Sub ${RemoveFieldLambda.Arn}:*
              - Effect: Allow
                Action:
                  - logs:CreateLogDelivery
                  - logs:GetLogDelivery
                  - logs:UpdateLogDelivery
                  - logs:DeleteLogDelivery
                  - logs:ListLogDeliveries
                  - logs:PutResourcePolicy
                  - logs:DescribeResourcePolicies
                  - logs:DescribeLogGroups
                Resource: "*"
              - Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                Resource: "*"
      Tags:
        - Key: Environment
          Value: !Ref StageName
        - Key: Application
          Value: !Ref ApplicationTag
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Purpose
          Value: !Ref PurposeTag
        - Key: Service
          Value: iam

  DeleteProfileDataStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub ${StackNamePrefix}DeleteProfileDataStateMachine-${StageName}
      DefinitionString: !Sub
        - |-
          {
            "Comment": "State Machine For deleteing Customer/Realtor profile data",
            "StartAt": "Starting?",
            "States": {
              "Starting?": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Variable": "$.isStart",
                    "BooleanEquals": true,
                    "Next": "SetFieldCount"
                  }
                ],
                "Default": "Iterator"
              },
              "SetFieldCount": {
                "Type": "Pass",
                "Result": -1,
                "ResultPath": "$.fieldCount",
                "Next": "InitFieldCount"
              },
              "InitFieldCount":{
                "Type": "Task",
                "Resource": "${InitLambdaARN}",
                "TimeoutSeconds": 86400,
                "HeartbeatSeconds": 3600,
                "Next": "HasFieldId?"
              },
              "HasFieldId?":{
                "Type": "Choice",
                "Choices": [
                  {
                    "And": [
                      {
                        "Variable": "$.status",
                        "BooleanEquals": true 
                      },
                      {
                        "Variable": "$.hasField",
                        "BooleanEquals": true
                      }
                    ],
                    "Next": "InitRemoveField"
                  },
                  {
                    "Variable": "$.status",
                    "BooleanEquals": false,
                    "Next": "Failure"
                  }
                ],
                "Default": "EndProcess"
              },
              "InitRemoveField": {
                "Type": "Task",
                "Resource": "${InitRemoveFieldARN}",
                "TimeoutSeconds": 86400,
                "HeartbeatSeconds": 3600,
                "Next": "hasValidCount?"
              },
              "hasValidCount?":{
                "Type": "Choice",
                "Choices": [
                  {
                    "And": [
                      {
                        "Variable": "$.status",
                        "BooleanEquals": true
                      },
                      {
                        "Variable": "$.hasCount",
                        "BooleanEquals": true
                      }
                    ],
                    "Next": "SetIteratorCount"
                  },
                  {
                    "And": [
                      {
                        "Variable": "$.status",
                        "BooleanEquals": true
                      },
                      {
                        "Variable": "$.hasCount",
                        "BooleanEquals": false
                      }
                    ],
                    "Next": "EndProcess"
                  }
                ],
                "Default": "Failure"
              },
              "SetIteratorCount": {
                "Type": "Pass",
                "Result": {
                  "index": -1,
                  "step": 2000,
                  "newExecutionStartsAt": 50000
                },
                "ResultPath": "$.iterator",
                "Next": "Iterator"
              },
              "Iterator": {
                "Type": "Task",
                "Resource": "${IteratorLambdaARN}",
                "TimeoutSeconds": 86400,
                "HeartbeatSeconds": 3600,
                "Next": "IsCountReached?"
              },
              "IsCountReached?": {
                "Type": "Choice",
                "Choices": [
                  {
                    "And": [
                      {
                        "Variable": "$.status",
                        "BooleanEquals": true 
                      },
                      {
                        "Variable": "$.iterator.continue",
                        "BooleanEquals": true
                      }
                    ],
                    "Next": "RemoveField"
                  },
                  {
                    "And": [
                      {
                        "Variable": "$.status",
                        "BooleanEquals": true 
                      },
                      {
                        "Variable": "$.iterator.continue",
                        "BooleanEquals": false
                      },
                      {
                        "Variable": "$.newStepFunctionStarted",
                        "BooleanEquals": false
                      }
                    ],
                    "Next": "InitFieldCount"
                  },
                  {
                    "And": [
                      {
                        "Variable": "$.status",
                        "BooleanEquals": true 
                      },
                      {
                        "Variable": "$.iterator.continue",
                        "BooleanEquals": false
                      },
                      {
                        "Variable": "$.newStepFunctionStarted",
                        "BooleanEquals": true
                      }
                    ],
                    "Next": "EndProcess"
                  }
                ],
                "Default": "Failure"
              },
              "RemoveField": {
                "Type": "Task",
                "Resource": "${RemoveFieldLambdaARN}",
                "TimeoutSeconds": 86400,
                "HeartbeatSeconds": 3600,
                "Next": "CheckError?"
              },
              "CheckError?": {
                "Type": "Choice",
                "Choices": [
                  {
                    "And": [
                      {
                        "Variable": "$.taskName",
                        "StringEquals": "RemoveField"
                      },
                      {
                        "Variable": "$.status",
                        "BooleanEquals": true
                      }
                    ],
                    "Next": "Iterator"
                  }
                ],
                "Default": "Failure"
              },
              "Failure": {
                "Type": "Fail",
                "Cause": "Invalid request/ Exception occured",
                "Error": "Request contains invalid or missing values/ Exception"
              },
              "EndProcess": {
                "Type": "Pass",
                "End": true
              }
            }
          }
        - {
            InitLambdaARN: !GetAtt InitLambda.Arn,
            InitRemoveFieldARN: !GetAtt InitRemoveFieldLambda.Arn,
            IteratorLambdaARN: !GetAtt IteratorLambda.Arn,
            RemoveFieldLambdaARN: !GetAtt RemoveFieldLambda.Arn
          }
      RoleArn: !GetAtt DeleteProfileDataStateMachineRole.Arn
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt DeleteProfileDataStateMachineLogGroup.Arn
        IncludeExecutionData: true
        Level: ALL
      TracingConfiguration:
        Enabled: true
      Tags:
        - Key: Environment
          Value: !Ref StageName
        - Key: Application
          Value: !Ref ApplicationTag
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Purpose
          Value: !Ref PurposeTag
        - Key: Service
          Value: stepfunctions

  DeleteProfileDataStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${StackNamePrefix}DeleteProfileData-${StageName}
      Tags:
        - Key: Environment
          Value: !Ref StageName
        - Key: Application
          Value: !Ref ApplicationTag
        - Key: Owner
          Value: !Ref OwnerTag
        - Key: Purpose
          Value: !Ref PurposeTag
        - Key: Service
          Value: cloudwatch
  
Outputs:
  DeleteProfileDataStateMachineArn:
    Value: !GetAtt DeleteProfileDataStateMachine.Arn