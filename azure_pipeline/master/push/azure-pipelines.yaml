pr: none
trigger:
  - master
variables:
  appName: aws-crm
  envBucket: hyphen-dev-deployment-artifacts
  scriptPath: $(Build.SourcesDirectory)/azure_pipeline/master/push
  awsCreds: hyphen
  awsRegion: us-west-2
  azureRootDir: $(Build.SourcesDirectory)
pool:
  vmImage: "ubuntu-latest"
stages:
  - stage: BuildDeploy
    variables:
      stagePath: $(scriptPath)/build_deploy
    jobs:
      - job: BuildDeploy
        variables:
          jobPath: $(stagePath)/build_deploy
        steps:
          - checkout: self
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.7"
          - bash: chmod -R a+x+X azure_pipeline/
            name: MakeFilesExecutable
            failOnStderr: true
          - bash: |
              gitHash=$(git rev-parse HEAD)
              echo "##vso[task.setvariable variable=gitHash]$gitHash"
            name: GetGitDigest
            failOnStderr: true
          - bash: |
              python -m pip install --upgrade pip 2> /dev/null
              pip install cfn-flip 2> /dev/null
            name: InstallCfnFlipPackage
            failOnStderr: true
          - task: NodeTool@0
            inputs:
              versionSpec: "16.13.1"
          - bash: |
              cd back_end
              npm i
              npm run predeploy
            name: PrepareForDeploy
          - task: AWSShellScript@1
            name: ServicesChanged
            inputs:
              awsCredentials: $(awsCreds)
              regionName: $(awsRegion)
              scriptType: "filePath"
              filePath: $(jobPath)/services_changed.sh
              failOnStderr: true
            env:
              azureRootDir: $(azureRootDir)
              appName: $(appName)
              envBucket: $(envBucket)
          - task: AWSShellScript@1
            name: TemplatesChanges
            inputs:
              awsCredentials: $(awsCreds)
              regionName: $(awsRegion)
              scriptType: "filePath"
              filePath: $(jobPath)/templates_changed.sh
              failOnStderr: true
            env:
              azureRootDir: $(azureRootDir)
              appName: $(appName)
              envBucket: $(envBucket)
          - bash: $(jobPath)/test_services.sh
            name: TestServices
            env:
              azureRootDir: $(azureRootDir)
              servicesUpdated: $(servicesUpdated)
          - task: AWSShellScript@1
            name: TestTemplates
            inputs:
              awsCredentials: $(awsCreds)
              regionName: $(awsRegion)
              scriptType: "filePath"
              filePath: $(jobPath)/test_templates.sh
              failOnStderr: true
            env:
              azureRootDir: $(azureRootDir)
              templatesUpdated: $(templatesUpdated)
          - task: AWSShellScript@1
            name: BuildServices
            inputs:
              awsCredentials: $(awsCreds)
              regionName: $(awsRegion)
              scriptType: "filePath"
              filePath: $(jobPath)/build_services.sh
              failOnStderr: true
            env:
              azureRootDir: $(azureRootDir)
              appName: $(appName)
              envBucket: $(envBucket)
              servicesUpdated: $(servicesUpdated)
              gitHash: $(gitHash)
          - task: AWSShellScript@1
            name: BuildTemplates
            inputs:
              awsCredentials: $(awsCreds)
              regionName: $(awsRegion)
              scriptType: "filePath"
              filePath: $(jobPath)/build_templates.sh
              failOnStderr: true
            env:
              azureRootDir: $(azureRootDir)
              appName: $(appName)
              envBucket: $(envBucket)
              templatesUpdated: $(templatesUpdated)
              gitHash: $(gitHash)